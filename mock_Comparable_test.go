// Code generated by mockery v2.26.0. DO NOT EDIT.

package conch

import mock "github.com/stretchr/testify/mock"

// MockComparable is an autogenerated mock type for the Comparable type
type MockComparable struct {
	mock.Mock
}

// LessThan provides a mock function with given fields: other
func (_m *MockComparable) LessThan(other Comparable) bool {
	ret := _m.Called(other)

	var r0 bool
	if rf, ok := ret.Get(0).(func(Comparable) bool); ok {
		r0 = rf(other)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewMockComparable interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockComparable creates a new instance of MockComparable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockComparable(t mockConstructorTestingTNewMockComparable) *MockComparable {
	mock := &MockComparable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

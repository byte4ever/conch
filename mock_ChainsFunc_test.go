// Code generated by mockery v2.26.0. DO NOT EDIT.

package conch

import (
	context "context"
	sync "sync"

	mock "github.com/stretchr/testify/mock"
)

// MockChainsFunc is an autogenerated mock type for the ChainsFunc type
type MockChainsFunc[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, group, inStream
func (_m *MockChainsFunc[T]) Execute(ctx context.Context, group *sync.WaitGroup, inStream ...<-chan T) {
	_va := make([]interface{}, len(inStream))
	for _i := range inStream {
		_va[_i] = inStream[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, group)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

type mockConstructorTestingTNewMockChainsFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockChainsFunc creates a new instance of MockChainsFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockChainsFunc[T interface{}](t mockConstructorTestingTNewMockChainsFunc) *MockChainsFunc[T] {
	mock := &MockChainsFunc[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

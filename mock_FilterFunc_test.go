// Code generated by mockery v2.26.0. DO NOT EDIT.

package conch

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockFilterFunc is an autogenerated mock type for the FilterFunc type
type MockFilterFunc[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, v
func (_m *MockFilterFunc[T]) Execute(ctx context.Context, v T) bool {
	ret := _m.Called(ctx, v)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, T) bool); ok {
		r0 = rf(ctx, v)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewMockFilterFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFilterFunc creates a new instance of MockFilterFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFilterFunc[T interface{}](t mockConstructorTestingTNewMockFilterFunc) *MockFilterFunc[T] {
	mock := &MockFilterFunc[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

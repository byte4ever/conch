// Code generated by mockery v2.26.0. DO NOT EDIT.

package conch

import (
	context "context"
	sync "sync"

	mock "github.com/stretchr/testify/mock"
)

// MockChainFunc is an autogenerated mock type for the ChainFunc type
type MockChainFunc[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, group, inStream
func (_m *MockChainFunc[T]) Execute(ctx context.Context, group *sync.WaitGroup, inStream <-chan T) {
	_m.Called(ctx, group, inStream)
}

type mockConstructorTestingTNewMockChainFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockChainFunc creates a new instance of MockChainFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockChainFunc[T interface{}](t mockConstructorTestingTNewMockChainFunc) *MockChainFunc[T] {
	mock := &MockChainFunc[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

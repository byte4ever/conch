// Code generated by mockery v2.26.0. DO NOT EDIT.

package conch

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// MockDurationGenerator is an autogenerated mock type for the DurationGenerator type
type MockDurationGenerator struct {
	mock.Mock
}

// Next provides a mock function with given fields:
func (_m *MockDurationGenerator) Next() time.Duration {
	ret := _m.Called()

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func() time.Duration); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	return r0
}

type mockConstructorTestingTNewMockDurationGenerator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDurationGenerator creates a new instance of MockDurationGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDurationGenerator(t mockConstructorTestingTNewMockDurationGenerator) *MockDurationGenerator {
	mock := &MockDurationGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

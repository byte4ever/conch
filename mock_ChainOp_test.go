// Code generated by mockery v2.26.0. DO NOT EDIT.

package conch

import (
	context "context"
	sync "sync"

	mock "github.com/stretchr/testify/mock"
)

// MockChainOp is an autogenerated mock type for the ChainOp type
type MockChainOp[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, wg, inStream, outStream
func (_m *MockChainOp[T]) Execute(ctx context.Context, wg *sync.WaitGroup, inStream <-chan T, outStream *<-chan T) {
	_m.Called(ctx, wg, inStream, outStream)
}

type mockConstructorTestingTNewMockChainOp interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockChainOp creates a new instance of MockChainOp. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockChainOp[T interface{}](t mockConstructorTestingTNewMockChainOp) *MockChainOp[T] {
	mock := &MockChainOp[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
